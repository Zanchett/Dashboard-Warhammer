.terminalContainer {
  --color-background: rgba(0, 0, 0, 0.95);
  --color-text: #14f074;
  --color-border: rgba(20, 240, 116, 0.2);
  --color-border-strong: rgba(20, 240, 116, 0.5);
  --color-scanline: rgba(20, 240, 116, 0.04);

  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background-color: var(--color-background);
  color: var(--color-text);
  font-family: 'Share Tech Mono', monospace;
  font-size: 14px;
  line-height: 1.6;
  overflow: hidden;
  padding: 20px;
  box-sizing: border-box;
  z-index: 9999;
}

.terminalContent {
  height: calc(100vh - 40px);
  overflow-y: hidden;
  display: flex;
  flex-direction: column;
}

.header, .entry {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 2fr 2fr;
  gap: 10px;
  padding: 5px 0;
  border-bottom: 1px solid var(--color-border);
}

.header {
  font-weight: bold;
  margin-bottom: 10px;
  border-bottom: 2px solid var(--color-border-strong);
}

.entry {
  animation: fadeInMove 0.3s ease-out forwards;
}

.directory {
  color: var(--color-text);
  font-weight: bold;
}

.file {
  color: var(--color-text);
}

.summary {
  margin-top: 20px;
  animation: fadeInMove 0.5s ease-out forwards;
}

.totalLine {
  margin-top: 5px;
  opacity: 0.8;
}

.conclusion {
  margin-top: 20px;
  font-size: 18px;
  font-weight: bold;
  text-align: center;
  animation: fadeInMove 0.5s ease-out forwards, pulse 2s infinite;
}

@keyframes fadeInMove {
  from { 
    opacity: 0;
    transform: translateY(20px);
  }
  to { 
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pulse {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}

/* CRT effect */
.terminalContainer::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%),
    linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
  background-size: 100% 2px, 3px 100%;
  pointer-events: none;
}

/* Scanline effect */
.terminalContainer::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    var(--color-scanline) 50%,
    rgba(0, 0, 0, 0.1) 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
  animation: scan 10s linear infinite;
}

@keyframes scan {
  from { transform: translateY(0); }
  to { transform: translateY(100%); }
}

